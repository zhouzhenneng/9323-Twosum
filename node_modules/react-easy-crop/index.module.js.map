{"version":3,"file":"index.module.js","sources":["../src/helpers.ts","../src/Cropper.tsx"],"sourcesContent":["import { Area, MediaSize, Point, Size } from './types'\n\n/**\n * Compute the dimension of the crop area based on media size,\n * aspect ratio and optionally rotation\n */\nexport function getCropSize(\n  mediaWidth: number,\n  mediaHeight: number,\n  containerWidth: number,\n  containerHeight: number,\n  aspect: number,\n  rotation = 0\n): Size {\n  const { width, height } = rotateSize(mediaWidth, mediaHeight, rotation)\n  const fittingWidth = Math.min(width, containerWidth)\n  const fittingHeight = Math.min(height, containerHeight)\n\n  if (fittingWidth > fittingHeight * aspect) {\n    return {\n      width: fittingHeight * aspect,\n      height: fittingHeight,\n    }\n  }\n\n  return {\n    width: fittingWidth,\n    height: fittingWidth / aspect,\n  }\n}\n\n/**\n * Compute media zoom.\n * We fit the media into the container with \"max-width: 100%; max-height: 100%;\"\n */\nexport function getMediaZoom(mediaSize: MediaSize) {\n  // Take the axis with more pixels to improve accuracy\n  return mediaSize.width > mediaSize.height\n    ? mediaSize.width / mediaSize.naturalWidth\n    : mediaSize.height / mediaSize.naturalHeight\n}\n\n/**\n * Ensure a new media position stays in the crop area.\n */\nexport function restrictPosition(\n  position: Point,\n  mediaSize: Size,\n  cropSize: Size,\n  zoom: number,\n  rotation = 0\n): Point {\n  const { width, height } = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  return {\n    x: restrictPositionCoord(position.x, width, cropSize.width, zoom),\n    y: restrictPositionCoord(position.y, height, cropSize.height, zoom),\n  }\n}\n\nfunction restrictPositionCoord(\n  position: number,\n  mediaSize: number,\n  cropSize: number,\n  zoom: number\n): number {\n  const maxPosition = (mediaSize * zoom) / 2 - cropSize / 2\n\n  return clamp(position, -maxPosition, maxPosition)\n}\n\nexport function getDistanceBetweenPoints(pointA: Point, pointB: Point) {\n  return Math.sqrt(Math.pow(pointA.y - pointB.y, 2) + Math.pow(pointA.x - pointB.x, 2))\n}\n\nexport function getRotationBetweenPoints(pointA: Point, pointB: Point) {\n  return (Math.atan2(pointB.y - pointA.y, pointB.x - pointA.x) * 180) / Math.PI\n}\n\n/**\n * Compute the output cropped area of the media in percentages and pixels.\n * x/y are the top-left coordinates on the src media\n */\nexport function computeCroppedArea(\n  crop: Point,\n  mediaSize: MediaSize,\n  cropSize: Size,\n  aspect: number,\n  zoom: number,\n  rotation = 0,\n  restrictPosition = true\n): { croppedAreaPercentages: Area; croppedAreaPixels: Area } {\n  // if the media is rotated by the user, we cannot limit the position anymore\n  // as it might need to be negative.\n  const limitAreaFn = restrictPosition ? limitArea : noOp\n\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  // calculate the crop area in percentages\n  // in the rotated space\n  const croppedAreaPercentages = {\n    x: limitAreaFn(\n      100,\n      (((mediaBBoxSize.width - cropSize.width / zoom) / 2 - crop.x / zoom) / mediaBBoxSize.width) *\n        100\n    ),\n    y: limitAreaFn(\n      100,\n      (((mediaBBoxSize.height - cropSize.height / zoom) / 2 - crop.y / zoom) /\n        mediaBBoxSize.height) *\n        100\n    ),\n    width: limitAreaFn(100, ((cropSize.width / mediaBBoxSize.width) * 100) / zoom),\n    height: limitAreaFn(100, ((cropSize.height / mediaBBoxSize.height) * 100) / zoom),\n  }\n\n  // we compute the pixels size naively\n  const widthInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.width,\n      (croppedAreaPercentages.width * mediaNaturalBBoxSize.width) / 100\n    )\n  )\n  const heightInPixels = Math.round(\n    limitAreaFn(\n      mediaNaturalBBoxSize.height,\n      (croppedAreaPercentages.height * mediaNaturalBBoxSize.height) / 100\n    )\n  )\n  const isImgWiderThanHigh = mediaNaturalBBoxSize.width >= mediaNaturalBBoxSize.height * aspect\n\n  // then we ensure the width and height exactly match the aspect (to avoid rounding approximations)\n  // if the media is wider than high, when zoom is 0, the crop height will be equals to image height\n  // thus we want to compute the width from the height and aspect for accuracy.\n  // Otherwise, we compute the height from width and aspect.\n  const sizePixels = isImgWiderThanHigh\n    ? {\n        width: Math.round(heightInPixels * aspect),\n        height: heightInPixels,\n      }\n    : {\n        width: widthInPixels,\n        height: Math.round(widthInPixels / aspect),\n      }\n\n  const croppedAreaPixels = {\n    ...sizePixels,\n    x: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.width - sizePixels.width,\n        (croppedAreaPercentages.x * mediaNaturalBBoxSize.width) / 100\n      )\n    ),\n    y: Math.round(\n      limitAreaFn(\n        mediaNaturalBBoxSize.height - sizePixels.height,\n        (croppedAreaPercentages.y * mediaNaturalBBoxSize.height) / 100\n      )\n    ),\n  }\n\n  return { croppedAreaPercentages, croppedAreaPixels }\n}\n\n/**\n * Ensure the returned value is between 0 and max\n */\nfunction limitArea(max: number, value: number): number {\n  return Math.min(max, Math.max(0, value))\n}\n\nfunction noOp(_max: number, value: number) {\n  return value\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPercentages.\n */\nexport function getInitialCropFromCroppedAreaPercentages(\n  croppedAreaPercentages: Area,\n  mediaSize: MediaSize,\n  rotation: number,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n) {\n  const mediaBBoxSize = rotateSize(mediaSize.width, mediaSize.height, rotation)\n\n  // This is the inverse process of computeCroppedArea\n  const zoom = clamp(\n    (cropSize.width / mediaBBoxSize.width) * (100 / croppedAreaPercentages.width),\n    minZoom,\n    maxZoom\n  )\n\n  const crop = {\n    x:\n      (zoom * mediaBBoxSize.width) / 2 -\n      cropSize.width / 2 -\n      mediaBBoxSize.width * zoom * (croppedAreaPercentages.x / 100),\n    y:\n      (zoom * mediaBBoxSize.height) / 2 -\n      cropSize.height / 2 -\n      mediaBBoxSize.height * zoom * (croppedAreaPercentages.y / 100),\n  }\n\n  return { crop, zoom }\n}\n\n/**\n * Compute zoom from the croppedAreaPixels\n */\nfunction getZoomFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  cropSize: Size\n): number {\n  const mediaZoom = getMediaZoom(mediaSize)\n\n  return cropSize.height > cropSize.width\n    ? cropSize.height / (croppedAreaPixels.height * mediaZoom)\n    : cropSize.width / (croppedAreaPixels.width * mediaZoom)\n}\n\n/**\n * Compute crop and zoom from the croppedAreaPixels\n */\nexport function getInitialCropFromCroppedAreaPixels(\n  croppedAreaPixels: Area,\n  mediaSize: MediaSize,\n  rotation = 0,\n  cropSize: Size,\n  minZoom: number,\n  maxZoom: number\n): { crop: Point; zoom: number } {\n  const mediaNaturalBBoxSize = rotateSize(mediaSize.naturalWidth, mediaSize.naturalHeight, rotation)\n\n  const zoom = clamp(\n    getZoomFromCroppedAreaPixels(croppedAreaPixels, mediaSize, cropSize),\n    minZoom,\n    maxZoom\n  )\n\n  const cropZoom =\n    cropSize.height > cropSize.width\n      ? cropSize.height / croppedAreaPixels.height\n      : cropSize.width / croppedAreaPixels.width\n\n  const crop = {\n    x:\n      ((mediaNaturalBBoxSize.width - croppedAreaPixels.width) / 2 - croppedAreaPixels.x) * cropZoom,\n    y:\n      ((mediaNaturalBBoxSize.height - croppedAreaPixels.height) / 2 - croppedAreaPixels.y) *\n      cropZoom,\n  }\n  return { crop, zoom }\n}\n\n/**\n * Return the point that is the center of point a and b\n */\nexport function getCenter(a: Point, b: Point): Point {\n  return {\n    x: (b.x + a.x) / 2,\n    y: (b.y + a.y) / 2,\n  }\n}\n\nexport function getRadianAngle(degreeValue: number) {\n  return (degreeValue * Math.PI) / 180\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width: number, height: number, rotation: number): Size {\n  const rotRad = getRadianAngle(rotation)\n\n  return {\n    width: Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height: Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  }\n}\n\n/**\n * Clamp value between min and max\n */\nexport function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max)\n}\n\n/**\n * Combine multiple class names into a single string.\n */\nexport function classNames(...args: (boolean | string | number | undefined | void | null)[]) {\n  return args\n    .filter((value) => {\n      if (typeof value === 'string' && value.length > 0) {\n        return true\n      }\n\n      return false\n    })\n    .join(' ')\n    .trim()\n}\n","import React from 'react'\nimport normalizeWheel from 'normalize-wheel'\nimport { Area, MediaSize, Point, Size, VideoSrc } from './types'\nimport {\n  getCropSize,\n  restrictPosition,\n  getDistanceBetweenPoints,\n  getRotationBetweenPoints,\n  computeCroppedArea,\n  getCenter,\n  getInitialCropFromCroppedAreaPixels,\n  getInitialCropFromCroppedAreaPercentages,\n  classNames,\n  clamp,\n} from './helpers'\nimport cssStyles from './styles.css'\n\nexport type CropperProps = {\n  image?: string\n  video?: string | VideoSrc[]\n  transform?: string\n  crop: Point\n  zoom: number\n  rotation: number\n  aspect: number\n  minZoom: number\n  maxZoom: number\n  cropShape: 'rect' | 'round'\n  cropSize?: Size\n  objectFit?: 'contain' | 'horizontal-cover' | 'vertical-cover' | 'auto-cover'\n  showGrid?: boolean\n  zoomSpeed: number\n  zoomWithScroll?: boolean\n  onCropChange: (location: Point) => void\n  onZoomChange?: (zoom: number) => void\n  onRotationChange?: (rotation: number) => void\n  onCropComplete?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropAreaChange?: (croppedArea: Area, croppedAreaPixels: Area) => void\n  onCropSizeChange?: (cropSize: Size) => void\n  onInteractionStart?: () => void\n  onInteractionEnd?: () => void\n  onMediaLoaded?: (mediaSize: MediaSize) => void\n  style: {\n    containerStyle?: React.CSSProperties\n    mediaStyle?: React.CSSProperties\n    cropAreaStyle?: React.CSSProperties\n  }\n  classes: {\n    containerClassName?: string\n    mediaClassName?: string\n    cropAreaClassName?: string\n  }\n  restrictPosition: boolean\n  mediaProps: React.ImgHTMLAttributes<HTMLElement> | React.VideoHTMLAttributes<HTMLElement>\n  disableAutomaticStylesInjection?: boolean\n  initialCroppedAreaPixels?: Area\n  initialCroppedAreaPercentages?: Area\n  onTouchRequest?: (e: React.TouchEvent<HTMLDivElement>) => boolean\n  onWheelRequest?: (e: WheelEvent) => boolean\n  setImageRef?: (ref: React.RefObject<HTMLImageElement>) => void\n  setVideoRef?: (ref: React.RefObject<HTMLVideoElement>) => void\n  nonce?: string\n}\n\ntype State = {\n  cropSize: Size | null\n  hasWheelJustStarted: boolean\n}\n\nconst MIN_ZOOM = 1\nconst MAX_ZOOM = 3\n\nclass Cropper extends React.Component<CropperProps, State> {\n  static defaultProps = {\n    zoom: 1,\n    rotation: 0,\n    aspect: 4 / 3,\n    maxZoom: MAX_ZOOM,\n    minZoom: MIN_ZOOM,\n    cropShape: 'rect' as const,\n    objectFit: 'contain' as const,\n    showGrid: true,\n    style: {},\n    classes: {},\n    mediaProps: {},\n    zoomSpeed: 1,\n    restrictPosition: true,\n    zoomWithScroll: true,\n  }\n\n  imageRef: React.RefObject<HTMLImageElement> = React.createRef()\n  videoRef: React.RefObject<HTMLVideoElement> = React.createRef()\n  containerRef: HTMLDivElement | null = null\n  styleRef: HTMLStyleElement | null = null\n  containerRect: DOMRect | null = null\n  mediaSize: MediaSize = { width: 0, height: 0, naturalWidth: 0, naturalHeight: 0 }\n  dragStartPosition: Point = { x: 0, y: 0 }\n  dragStartCrop: Point = { x: 0, y: 0 }\n  lastPinchDistance = 0\n  lastPinchRotation = 0\n  rafDragTimeout: number | null = null\n  rafPinchTimeout: number | null = null\n  wheelTimer: number | null = null\n\n  state: State = {\n    cropSize: null,\n    hasWheelJustStarted: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.props.zoomWithScroll &&\n        this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n      this.containerRef.addEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.addEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (!this.props.disableAutomaticStylesInjection) {\n      this.styleRef = document.createElement('style')\n      this.styleRef.setAttribute('type', 'text/css')\n      if (this.props.nonce) {\n        this.styleRef.setAttribute('nonce', this.props.nonce)\n      }\n      this.styleRef.innerHTML = cssStyles\n      document.head.appendChild(this.styleRef)\n    }\n\n    // when rendered via SSR, the image can already be loaded and its onLoad callback will never be called\n    if (this.imageRef.current && this.imageRef.current.complete) {\n      this.onMediaLoad()\n    }\n\n    // set image and video refs in the parent if the callbacks exist\n    if (this.props.setImageRef) {\n      this.props.setImageRef(this.imageRef)\n    }\n\n    if (this.props.setVideoRef) {\n      this.props.setVideoRef(this.videoRef)\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.computeSizes)\n    if (this.containerRef) {\n      this.containerRef.removeEventListener('gesturestart', this.preventZoomSafari)\n      this.containerRef.removeEventListener('gesturechange', this.preventZoomSafari)\n    }\n\n    if (this.styleRef) {\n      this.styleRef.parentNode?.removeChild(this.styleRef)\n    }\n\n    this.cleanEvents()\n    this.props.zoomWithScroll && this.clearScrollEvent()\n  }\n\n  componentDidUpdate(prevProps: CropperProps) {\n    if (prevProps.rotation !== this.props.rotation) {\n      this.computeSizes()\n      this.recomputeCropPosition()\n    } else if (prevProps.aspect !== this.props.aspect) {\n      this.computeSizes()\n    } else if (prevProps.zoom !== this.props.zoom) {\n      this.recomputeCropPosition()\n    } else if (\n      prevProps.cropSize?.height !== this.props.cropSize?.height ||\n      prevProps.cropSize?.width !== this.props.cropSize?.width\n    ) {\n      this.computeSizes()\n    } else if (\n      prevProps.crop?.x !== this.props.crop?.x ||\n      prevProps.crop?.y !== this.props.crop?.y\n    ) {\n      this.emitCropAreaChange()\n    }\n    if (prevProps.zoomWithScroll !== this.props.zoomWithScroll && this.containerRef) {\n      this.props.zoomWithScroll\n        ? this.containerRef.addEventListener('wheel', this.onWheel, { passive: false })\n        : this.clearScrollEvent()\n    }\n    if (prevProps.video !== this.props.video) {\n      this.videoRef.current?.load()\n    }\n  }\n\n  // this is to prevent Safari on iOS >= 10 to zoom the page\n  preventZoomSafari = (e: Event) => e.preventDefault()\n\n  cleanEvents = () => {\n    document.removeEventListener('mousemove', this.onMouseMove)\n    document.removeEventListener('mouseup', this.onDragStopped)\n    document.removeEventListener('touchmove', this.onTouchMove)\n    document.removeEventListener('touchend', this.onDragStopped)\n  }\n\n  clearScrollEvent = () => {\n    if (this.containerRef) this.containerRef.removeEventListener('wheel', this.onWheel)\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n  }\n\n  onMediaLoad = () => {\n    const cropSize = this.computeSizes()\n\n    if (cropSize) {\n      this.emitCropData()\n      this.setInitialCrop(cropSize)\n    }\n\n    if (this.props.onMediaLoaded) {\n      this.props.onMediaLoaded(this.mediaSize)\n    }\n  }\n\n  setInitialCrop = (cropSize: Size) => {\n    if (this.props.initialCroppedAreaPercentages) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPercentages(\n        this.props.initialCroppedAreaPercentages,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    } else if (this.props.initialCroppedAreaPixels) {\n      const { crop, zoom } = getInitialCropFromCroppedAreaPixels(\n        this.props.initialCroppedAreaPixels,\n        this.mediaSize,\n        this.props.rotation,\n        cropSize,\n        this.props.minZoom,\n        this.props.maxZoom\n      )\n\n      this.props.onCropChange(crop)\n      this.props.onZoomChange && this.props.onZoomChange(zoom)\n    }\n  }\n\n  getAspect() {\n    const { cropSize, aspect } = this.props\n    if (cropSize) {\n      return cropSize.width / cropSize.height\n    }\n    return aspect\n  }\n\n  computeSizes = () => {\n    const mediaRef = this.imageRef.current || this.videoRef.current\n\n    if (mediaRef && this.containerRef) {\n      this.containerRect = this.containerRef.getBoundingClientRect()\n      const containerAspect = this.containerRect.width / this.containerRect.height\n      const naturalWidth =\n        this.imageRef.current?.naturalWidth || this.videoRef.current?.videoWidth || 0\n      const naturalHeight =\n        this.imageRef.current?.naturalHeight || this.videoRef.current?.videoHeight || 0\n      const isMediaScaledDown =\n        mediaRef.offsetWidth < naturalWidth || mediaRef.offsetHeight < naturalHeight\n      const mediaAspect = naturalWidth / naturalHeight\n\n      // We do not rely on the offsetWidth/offsetHeight if the media is scaled down\n      // as the values they report are rounded. That will result in precision losses\n      // when calculating zoom. We use the fact that the media is positionned relative\n      // to the container. That allows us to use the container's dimensions\n      // and natural aspect ratio of the media to calculate accurate media size.\n      // However, for this to work, the container should not be rotated\n      let renderedMediaSize: Size\n\n      if (isMediaScaledDown) {\n        switch (this.props.objectFit) {\n          default:\n          case 'contain':\n            renderedMediaSize =\n              containerAspect > mediaAspect\n                ? {\n                    width: this.containerRect.height * mediaAspect,\n                    height: this.containerRect.height,\n                  }\n                : {\n                    width: this.containerRect.width,\n                    height: this.containerRect.width / mediaAspect,\n                  }\n            break\n          case 'horizontal-cover':\n            renderedMediaSize = {\n              width: this.containerRect.width,\n              height: this.containerRect.width / mediaAspect,\n            }\n            break\n          case 'vertical-cover':\n            renderedMediaSize = {\n              width: this.containerRect.height * mediaAspect,\n              height: this.containerRect.height,\n            }\n            break\n          case 'auto-cover':\n            renderedMediaSize =\n              naturalWidth > naturalHeight\n                ? {\n                    width: this.containerRect.width,\n                    height: this.containerRect.width / mediaAspect,\n                  }\n                : {\n                    width: this.containerRect.height * mediaAspect,\n                    height: this.containerRect.height,\n                  }\n            break\n        }\n      } else {\n        renderedMediaSize = {\n          width: mediaRef.offsetWidth,\n          height: mediaRef.offsetHeight,\n        }\n      }\n\n      this.mediaSize = {\n        ...renderedMediaSize,\n        naturalWidth,\n        naturalHeight,\n      }\n\n      const cropSize = this.props.cropSize\n        ? this.props.cropSize\n        : getCropSize(\n            this.mediaSize.width,\n            this.mediaSize.height,\n            this.containerRect.width,\n            this.containerRect.height,\n            this.props.aspect,\n            this.props.rotation\n          )\n\n      if (\n        this.state.cropSize?.height !== cropSize.height ||\n        this.state.cropSize?.width !== cropSize.width\n      ) {\n        this.props.onCropSizeChange && this.props.onCropSizeChange(cropSize)\n      }\n      this.setState({ cropSize }, this.recomputeCropPosition)\n\n      return cropSize\n    }\n  }\n\n  static getMousePoint = (e: MouseEvent | React.MouseEvent) => ({\n    x: Number(e.clientX),\n    y: Number(e.clientY),\n  })\n\n  static getTouchPoint = (touch: Touch | React.Touch) => ({\n    x: Number(touch.clientX),\n    y: Number(touch.clientY),\n  })\n\n  onMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.preventDefault()\n    document.addEventListener('mousemove', this.onMouseMove)\n    document.addEventListener('mouseup', this.onDragStopped)\n    this.onDragStart(Cropper.getMousePoint(e))\n  }\n\n  onMouseMove = (e: MouseEvent) => this.onDrag(Cropper.getMousePoint(e))\n\n  onTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\n    if (this.props.onTouchRequest && !this.props.onTouchRequest(e)) {\n      return\n    }\n\n    document.addEventListener('touchmove', this.onTouchMove, { passive: false }) // iOS 11 now defaults to passive: true\n    document.addEventListener('touchend', this.onDragStopped)\n\n    if (e.touches.length === 2) {\n      this.onPinchStart(e)\n    } else if (e.touches.length === 1) {\n      this.onDragStart(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    // Prevent whole page from scrolling on iOS.\n    e.preventDefault()\n    if (e.touches.length === 2) {\n      this.onPinchMove(e)\n    } else if (e.touches.length === 1) {\n      this.onDrag(Cropper.getTouchPoint(e.touches[0]))\n    }\n  }\n\n  onDragStart = ({ x, y }: Point) => {\n    this.dragStartPosition = { x, y }\n    this.dragStartCrop = { ...this.props.crop }\n    this.props.onInteractionStart?.()\n  }\n\n  onDrag = ({ x, y }: Point) => {\n    if (this.rafDragTimeout) window.cancelAnimationFrame(this.rafDragTimeout)\n\n    this.rafDragTimeout = window.requestAnimationFrame(() => {\n      if (!this.state.cropSize) return\n      if (x === undefined || y === undefined) return\n      const offsetX = x - this.dragStartPosition.x\n      const offsetY = y - this.dragStartPosition.y\n      const requestedPosition = {\n        x: this.dragStartCrop.x + offsetX,\n        y: this.dragStartCrop.y + offsetY,\n      }\n\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            this.props.zoom,\n            this.props.rotation\n          )\n        : requestedPosition\n      this.props.onCropChange(newPosition)\n    })\n  }\n\n  onDragStopped = () => {\n    this.cleanEvents()\n    this.emitCropData()\n    this.props.onInteractionEnd?.()\n  }\n\n  onPinchStart(e: React.TouchEvent<HTMLDivElement>) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    this.lastPinchDistance = getDistanceBetweenPoints(pointA, pointB)\n    this.lastPinchRotation = getRotationBetweenPoints(pointA, pointB)\n    this.onDragStart(getCenter(pointA, pointB))\n  }\n\n  onPinchMove(e: TouchEvent) {\n    const pointA = Cropper.getTouchPoint(e.touches[0])\n    const pointB = Cropper.getTouchPoint(e.touches[1])\n    const center = getCenter(pointA, pointB)\n    this.onDrag(center)\n\n    if (this.rafPinchTimeout) window.cancelAnimationFrame(this.rafPinchTimeout)\n    this.rafPinchTimeout = window.requestAnimationFrame(() => {\n      const distance = getDistanceBetweenPoints(pointA, pointB)\n      const newZoom = this.props.zoom * (distance / this.lastPinchDistance)\n      this.setNewZoom(newZoom, center, { shouldUpdatePosition: false })\n      this.lastPinchDistance = distance\n\n      const rotation = getRotationBetweenPoints(pointA, pointB)\n      const newRotation = this.props.rotation + (rotation - this.lastPinchRotation)\n      this.props.onRotationChange && this.props.onRotationChange(newRotation)\n      this.lastPinchRotation = rotation\n    })\n  }\n\n  onWheel = (e: WheelEvent) => {\n    if (this.props.onWheelRequest && !this.props.onWheelRequest(e)) {\n      return\n    }\n\n    e.preventDefault()\n    const point = Cropper.getMousePoint(e)\n    const { pixelY } = normalizeWheel(e)\n    const newZoom = this.props.zoom - (pixelY * this.props.zoomSpeed) / 200\n    this.setNewZoom(newZoom, point, { shouldUpdatePosition: true })\n\n    if (!this.state.hasWheelJustStarted) {\n      this.setState({ hasWheelJustStarted: true }, () => this.props.onInteractionStart?.())\n    }\n\n    if (this.wheelTimer) {\n      clearTimeout(this.wheelTimer)\n    }\n    this.wheelTimer = window.setTimeout(\n      () => this.setState({ hasWheelJustStarted: false }, () => this.props.onInteractionEnd?.()),\n      250\n    )\n  }\n\n  getPointOnContainer = ({ x, y }: Point) => {\n    if (!this.containerRect) {\n      throw new Error('The Cropper is not mounted')\n    }\n    return {\n      x: this.containerRect.width / 2 - (x - this.containerRect.left),\n      y: this.containerRect.height / 2 - (y - this.containerRect.top),\n    }\n  }\n\n  getPointOnMedia = ({ x, y }: Point) => {\n    const { crop, zoom } = this.props\n    return {\n      x: (x + crop.x) / zoom,\n      y: (y + crop.y) / zoom,\n    }\n  }\n\n  setNewZoom = (zoom: number, point: Point, { shouldUpdatePosition = true } = {}) => {\n    if (!this.state.cropSize || !this.props.onZoomChange) return\n\n    const zoomPoint = this.getPointOnContainer(point)\n    const zoomTarget = this.getPointOnMedia(zoomPoint)\n    const newZoom = clamp(zoom, this.props.minZoom, this.props.maxZoom)\n    const requestedPosition = {\n      x: zoomTarget.x * newZoom - zoomPoint.x,\n      y: zoomTarget.y * newZoom - zoomPoint.y,\n    }\n\n    if (shouldUpdatePosition) {\n      const newPosition = this.props.restrictPosition\n        ? restrictPosition(\n            requestedPosition,\n            this.mediaSize,\n            this.state.cropSize,\n            newZoom,\n            this.props.rotation\n          )\n        : requestedPosition\n\n      this.props.onCropChange(newPosition)\n    }\n    this.props.onZoomChange(newZoom)\n  }\n\n  getCropData = () => {\n    if (!this.state.cropSize) {\n      return null\n    }\n\n    // this is to ensure the crop is correctly restricted after a zoom back (https://github.com/ValentinH/react-easy-crop/issues/6)\n    const restrictedPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n    return computeCroppedArea(\n      restrictedPosition,\n      this.mediaSize,\n      this.state.cropSize,\n      this.getAspect(),\n      this.props.zoom,\n      this.props.rotation,\n      this.props.restrictPosition\n    )\n  }\n\n  emitCropData = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropComplete) {\n      this.props.onCropComplete(croppedAreaPercentages, croppedAreaPixels)\n    }\n\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  emitCropAreaChange = () => {\n    const cropData = this.getCropData()\n    if (!cropData) return\n\n    const { croppedAreaPercentages, croppedAreaPixels } = cropData\n    if (this.props.onCropAreaChange) {\n      this.props.onCropAreaChange(croppedAreaPercentages, croppedAreaPixels)\n    }\n  }\n\n  recomputeCropPosition = () => {\n    if (!this.state.cropSize) return\n\n    const newPosition = this.props.restrictPosition\n      ? restrictPosition(\n          this.props.crop,\n          this.mediaSize,\n          this.state.cropSize,\n          this.props.zoom,\n          this.props.rotation\n        )\n      : this.props.crop\n\n    this.props.onCropChange(newPosition)\n    this.emitCropData()\n  }\n\n  render() {\n    const {\n      image,\n      video,\n      mediaProps,\n      transform,\n      crop: { x, y },\n      rotation,\n      zoom,\n      cropShape,\n      showGrid,\n      style: { containerStyle, cropAreaStyle, mediaStyle },\n      classes: { containerClassName, cropAreaClassName, mediaClassName },\n      objectFit,\n    } = this.props\n\n    return (\n      <div\n        onMouseDown={this.onMouseDown}\n        onTouchStart={this.onTouchStart}\n        ref={(el) => (this.containerRef = el)}\n        data-testid=\"container\"\n        style={containerStyle}\n        className={classNames('reactEasyCrop_Container', containerClassName)}\n      >\n        {image ? (\n          <img\n            alt=\"\"\n            className={classNames(\n              'reactEasyCrop_Image',\n              objectFit === 'contain' && 'reactEasyCrop_Contain',\n              objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n              objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n              objectFit === 'auto-cover' &&\n                (this.mediaSize.naturalWidth > this.mediaSize.naturalHeight\n                  ? 'reactEasyCrop_Cover_Horizontal'\n                  : 'reactEasyCrop_Cover_Vertical'),\n              mediaClassName\n            )}\n            {...(mediaProps as React.ImgHTMLAttributes<HTMLElement>)}\n            src={image}\n            ref={this.imageRef}\n            style={{\n              ...mediaStyle,\n              transform:\n                transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n            }}\n            onLoad={this.onMediaLoad}\n          />\n        ) : (\n          video && (\n            <video\n              autoPlay\n              loop\n              muted={true}\n              className={classNames(\n                'reactEasyCrop_Video',\n                objectFit === 'contain' && 'reactEasyCrop_Contain',\n                objectFit === 'horizontal-cover' && 'reactEasyCrop_Cover_Horizontal',\n                objectFit === 'vertical-cover' && 'reactEasyCrop_Cover_Vertical',\n                objectFit === 'auto-cover' &&\n                  (this.mediaSize.naturalWidth > this.mediaSize.naturalHeight\n                    ? 'reactEasyCrop_Cover_Horizontal'\n                    : 'reactEasyCrop_Cover_Vertical'),\n                mediaClassName\n              )}\n              {...mediaProps}\n              ref={this.videoRef}\n              onLoadedMetadata={this.onMediaLoad}\n              style={{\n                ...mediaStyle,\n                transform:\n                  transform || `translate(${x}px, ${y}px) rotate(${rotation}deg) scale(${zoom})`,\n              }}\n              controls={false}\n            >\n              {(Array.isArray(video) ? video : [{ src: video }]).map((item) => (\n                <source key={item.src} {...item} />\n              ))}\n            </video>\n          )\n        )}\n        {this.state.cropSize && (\n          <div\n            style={{\n              ...cropAreaStyle,\n              width: this.state.cropSize.width,\n              height: this.state.cropSize.height,\n            }}\n            data-testid=\"cropper\"\n            className={classNames(\n              'reactEasyCrop_CropArea',\n              cropShape === 'round' && 'reactEasyCrop_CropAreaRound',\n              showGrid && 'reactEasyCrop_CropAreaGrid',\n              cropAreaClassName\n            )}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Cropper\n"],"names":["getCropSize","mediaWidth","mediaHeight","containerWidth","containerHeight","aspect","rotation","_a","rotateSize","width","height","fittingWidth","Math","min","fittingHeight","getMediaZoom","mediaSize","naturalWidth","naturalHeight","restrictPosition","position","cropSize","zoom","x","restrictPositionCoord","y","maxPosition","clamp","getDistanceBetweenPoints","pointA","pointB","sqrt","pow","getRotationBetweenPoints","atan2","PI","computeCroppedArea","crop","limitAreaFn","limitArea","noOp","mediaBBoxSize","mediaNaturalBBoxSize","croppedAreaPercentages","widthInPixels","round","heightInPixels","isImgWiderThanHigh","sizePixels","croppedAreaPixels","max","value","_max","getInitialCropFromCroppedAreaPercentages","minZoom","maxZoom","getZoomFromCroppedAreaPixels","mediaZoom","getInitialCropFromCroppedAreaPixels","cropZoom","getCenter","a","b","getRadianAngle","degreeValue","rotRad","abs","cos","sin","classNames","_i","args","filter","length","join","trim","MIN_ZOOM","MAX_ZOOM","__extends","_this","React","createRef","hasWheelJustStarted","e","preventDefault","document","removeEventListener","onMouseMove","onDragStopped","onTouchMove","containerRef","onWheel","wheelTimer","clearTimeout","computeSizes","emitCropData","setInitialCrop","props","onMediaLoaded","initialCroppedAreaPercentages","onCropChange","onZoomChange","initialCroppedAreaPixels","_b","mediaRef","imageRef","current","videoRef","containerRect","getBoundingClientRect","containerAspect","videoWidth","videoHeight","isMediaScaledDown","offsetWidth","offsetHeight","mediaAspect","renderedMediaSize","objectFit","state","onCropSizeChange","setState","recomputeCropPosition","addEventListener","onDragStart","Cropper","getMousePoint","onDrag","onTouchRequest","passive","touches","onPinchStart","getTouchPoint","onPinchMove","dragStartPosition","dragStartCrop","onInteractionStart","rafDragTimeout","window","cancelAnimationFrame","requestAnimationFrame","undefined","offsetX","offsetY","requestedPosition","newPosition","cleanEvents","onInteractionEnd","onWheelRequest","point","pixelY","normalizeWheel","newZoom","zoomSpeed","setNewZoom","shouldUpdatePosition","setTimeout","Error","left","top","zoomPoint","getPointOnContainer","zoomTarget","getPointOnMedia","restrictedPosition","getAspect","cropData","getCropData","onCropComplete","onCropAreaChange","zoomWithScroll","preventZoomSafari","disableAutomaticStylesInjection","styleRef","createElement","setAttribute","nonce","innerHTML","cssStyles","head","appendChild","complete","onMediaLoad","setImageRef","setVideoRef","parentNode","removeChild","clearScrollEvent","prevProps","emitCropAreaChange","video","load","lastPinchDistance","lastPinchRotation","center","rafPinchTimeout","distance","newRotation","onRotationChange","image","mediaProps","transform","cropShape","showGrid","_c","containerStyle","cropAreaStyle","mediaStyle","_d","containerClassName","cropAreaClassName","mediaClassName","onMouseDown","onTouchStart","ref","el","style","className","alt","src","onLoad","autoPlay","loop","muted","onLoadedMetadata","controls","Array","isArray","map","item","key","classes","Number","clientX","clientY","touch","Component"],"mappings":"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"}